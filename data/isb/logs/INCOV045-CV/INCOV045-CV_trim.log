Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 8 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 2.10
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 8 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /labs/khatrilab/solomonb/covid/isb/temp_fastq/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /labs/khatrilab/solomonb/covid/isb/temp_fastq/INCOV045-CV_R2.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	5085	AGATCGGAAGAGC	1000000	0.51
smallRNA	15	TGGAATTCTCGG	1000000	0.00
Nextera	6	CTGTCTCTTATA	1000000	0.00
Using Illumina adapter for trimming (count: 5085). Second best hit was smallRNA (count: 15)

Writing report to '/labs/khatrilab/solomonb/covid/isb/temp_fastq/INCOV045-CV_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /labs/khatrilab/solomonb/covid/isb/temp_fastq/INCOV045-CV_R2.fastq.gz
Trimming mode: single-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 2.10
Python version: could not detect
Number of cores used for trimming: 8
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length before a sequence gets removed: 20 bp
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 2.10). Setting -j 8
Writing final adapter and quality trimmed output to INCOV045-CV_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file /labs/khatrilab/solomonb/covid/isb/temp_fastq/INCOV045-CV_R2.fastq.gz <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
50000000 sequences processed
60000000 sequences processed
70000000 sequences processed
This is cutadapt 2.10 with Python 3.7.8
Command line parameters: -j 8 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC /labs/khatrilab/solomonb/covid/isb/temp_fastq/INCOV045-CV_R2.fastq.gz
Processing reads on 8 cores in single-end mode ...
Finished in 343.36 s (4 us/read; 13.44 M reads/minute).

=== Summary ===

Total reads processed:              76,888,818
Reads with adapters:                23,278,916 (30.3%)
Reads written (passing filters):    76,888,818 (100.0%)

Total basepairs processed: 6,996,882,438 bp
Quality-trimmed:              80,495,596 bp (1.2%)
Total written (filtered):  6,879,295,976 bp (98.3%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 23278916 times

No. of allowed errors:
0-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 32.2%
  C: 31.4%
  G: 20.3%
  T: 16.0%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	16920777	19222204.5	0	16920777
2	4583382	4805551.1	0	4583382
3	1112637	1201387.8	0	1112637
4	237940	300346.9	0	237940
5	53174	75086.7	0	53174
6	5487	18771.7	0	5487
7	2107	4692.9	0	2107
8	1255	1173.2	0	1255
9	2085	293.3	0	1451 634
10	2352	73.3	1	1107 1245
11	23260	18.3	1	15728 7532
12	6185	4.6	1	4614 1571
13	12673	1.1	1	9591 3082
14	5477	1.1	1	4382 1095
15	7969	1.1	1	6086 1883
16	23885	1.1	1	19508 4377
17	49232	1.1	1	43415 5817
18	201030	1.1	1	179665 21365
19	9678	1.1	1	8745 933
20	1451	1.1	1	1233 218
21	1032	1.1	1	890 142
22	887	1.1	1	759 128
23	985	1.1	1	740 245
24	772	1.1	1	581 191
25	961	1.1	1	725 236
26	819	1.1	1	550 269
27	1215	1.1	1	768 447
28	487	1.1	1	441 46
29	636	1.1	1	508 128
30	442	1.1	1	398 44
31	591	1.1	1	501 90
32	398	1.1	1	361 37
33	415	1.1	1	367 48
34	421	1.1	1	361 60
35	280	1.1	1	255 25
36	388	1.1	1	340 48
37	310	1.1	1	295 15
38	302	1.1	1	272 30
39	295	1.1	1	279 16
40	322	1.1	1	296 26
41	352	1.1	1	331 21
42	288	1.1	1	264 24
43	315	1.1	1	289 26
44	250	1.1	1	231 19
45	181	1.1	1	171 10
46	193	1.1	1	186 7
47	164	1.1	1	152 12
48	133	1.1	1	123 10
49	128	1.1	1	110 18
50	243	1.1	1	224 19
51	173	1.1	1	158 15
52	191	1.1	1	176 15
53	155	1.1	1	132 23
54	77	1.1	1	65 12
55	70	1.1	1	54 16
56	40	1.1	1	33 7
57	138	1.1	1	118 20
58	79	1.1	1	61 18
59	184	1.1	1	168 16
60	148	1.1	1	135 13
61	198	1.1	1	178 20
62	93	1.1	1	76 17
63	120	1.1	1	105 15
64	58	1.1	1	44 14
65	54	1.1	1	42 12
66	65	1.1	1	53 12
67	75	1.1	1	57 18
68	62	1.1	1	45 17
69	41	1.1	1	32 9
70	44	1.1	1	34 10
71	52	1.1	1	46 6
72	46	1.1	1	34 12
73	54	1.1	1	37 17
74	57	1.1	1	38 19
75	48	1.1	1	37 11
76	20	1.1	1	10 10
77	23	1.1	1	7 16
78	25	1.1	1	9 16
79	23	1.1	1	3 20
80	25	1.1	1	12 13
81	22	1.1	1	7 15
82	35	1.1	1	11 24
83	24	1.1	1	12 12
84	24	1.1	1	11 13
85	19	1.1	1	11 8
86	12	1.1	1	6 6
87	20	1.1	1	6 14
88	23	1.1	1	13 10
89	16	1.1	1	9 7
90	15	1.1	1	7 8
91	27	1.1	1	5 22

RUN STATISTICS FOR INPUT FILE: /labs/khatrilab/solomonb/covid/isb/temp_fastq/INCOV045-CV_R2.fastq.gz
=============================================
76888818 sequences processed in total
Sequences removed because they became shorter than the length cutoff of 20 bp:	292902 (0.4%)

