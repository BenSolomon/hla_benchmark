filter(grepl("-BL", sample_id)) %>%
head() %>%
unnest(all_barcodes) %>%
mutate(cell = sprintf("A1.%s", cell_barcode)) %>%
select(sample = sample_id, sequencingSampleID = sequencing_sample_id, cell)
barcode_key <- barcode_key %>%
filter(grepl("-BL", sample_id)) %>%
head() %>%
unnest(all_barcodes) %>%
mutate(cell = sprintf("A1.%s", cell_barcode)) %>%
select(sample = sample_id, sequencingSampleID = sequencing_sample_id, cell)
srt %>%
select(-sample) %>%
left_join(barcode_key, by = c("sequencingSampleID", "cell")) %>%
drop_na()
barcode_key
srt
srt %>%
select(-sample) %>%
left_join(barcode_key, by = c("sequencingSampleID", "cell"))
barcode_key
barcode_key <- readRDS("/labs/khatrilab/solomonb/covid/isb/demultiplexing_barcode_reference.rds")
barcode_key
barcode_key <- barcode_key %>%
filter(grepl("-BL", sample_id)) %>%
head() %>%
unnest(all_barcodes) %>%
mutate(cell = sprintf("%s.%s", sequencing_sample_id, cell_barcode)) %>%
select(sample = sample_id, cell)
srt %>%
select(-sample) %>%
left_join(barcode_key, by = c("sequencingSampleID", "cell")) %>%
drop_na()
srt %>%
select(-sample) %>%
left_join(barcode_key, by = c("cell")) %>%
drop_na()
srt %>% count(sampleID)
srt %>%
count(sampleID == "INCOV005-BL") %>%
# sample_frac(0.1) %>%
ggplot(aes(x = UMAP_1, y = UMAP_2, color = celltype)) +
geom_point(size = 0.1, alpha = 0.1)+
theme_bw() +
facet_wrap(~severity, ncol = 3)
srt %>%
count(sampleID == "INCOV005-BL") %>%
# sample_frac(0.1) %>%
ggplot(aes(x = UMAP_1, y = UMAP_2, color = celltype)) +
geom_point(size = 0.1, alpha = 0.1)+
theme_bw()
srt
srt %>%
# sample_frac(0.1) %>%
ggplot(aes(x = UMAP_1, y = UMAP_2, color = celltype)) +
geom_point(size = 0.1, alpha = 0.1)+
theme_bw()
srt %>%
filter(sampleID == "INCOV005-BL") %>%
# sample_frac(0.1) %>%
ggplot(aes(x = UMAP_1, y = UMAP_2, color = celltype)) +
geom_point(size = 0.1, alpha = 0.1)+
theme_bw()
srt %>%
filter(sampleID == "INCOV005-BL") %>%
# sample_frac(0.1) %>%
ggplot(aes(x = UMAP_1, y = UMAP_2, color = celltype)) +
geom_point(size = 0.5, alpha = 0.5)+
theme_bw()
str_split("INCOV_A1", "_")
str_split("INCOV_A1", "_",simplify = T)
str_split("INCOV_A1", "_",simplify = T)[2]
scHLA_import <- function(sample, result_path, barcode_path){
pool <- str_split(sample, "_",simplify = T)[2]
mm <- readMM(sprintf("%s/%s_results/count_matrix.mtx", result_path, sample))
dimnames(mm) <- list(
allele = read_tsv(
sprintf("%s/%s_results/labels.tsv", result_path, sample),
col_names = "allele") %>% pull(allele),
cell = read_tsv(
sprintf("%s/%s_barcode.tsv", barcode_path, sample),
col_names = "barcode") %>% pull(barcode))
data.frame(allele=rownames(mm)[mm@i + 1], cell=colnames(mm)[mm@j + 1], count=mm@x) %>%
mutate(cell = sprintf("%s.%s", pool, cell))
}
isb_path <- "/labs/khatrilab/solomonb/covid/isb"
sprintf("%s", isb_path)
scHLA_import(
sample="INCOV005-BL_S7",
result_path=sprintf("%s/scHLAcount/output/invitro", isb_path),
barcode_path=sprintf("%s/scHLAcount/genotypes", isb_path)
)
scHLA_import <- function(sample, result_path, barcode_path){
pool <- str_split(sample, "_",simplify = T)[2]
mm <- Matrix::readMM(sprintf("%s/%s_results/count_matrix.mtx", result_path, sample))
dimnames(mm) <- list(
allele = read_tsv(
sprintf("%s/%s_results/labels.tsv", result_path, sample),
col_names = "allele") %>% pull(allele),
cell = read_tsv(
sprintf("%s/%s_barcode.tsv", barcode_path, sample),
col_names = "barcode") %>% pull(barcode))
data.frame(allele=rownames(mm)[mm@i + 1], cell=colnames(mm)[mm@j + 1], count=mm@x) %>%
mutate(cell = sprintf("%s.%s", pool, cell))
}
scHLA_import(
sample="INCOV005-BL_S7",
result_path=sprintf("%s/scHLAcount/output/invitro", isb_path),
barcode_path=sprintf("%s/scHLAcount/genotypes", isb_path)
)
scHLA_import(
sample="INCOV005-BL_S7",
result_path=sprintf("%s/scHLAcount/output/invitro", isb_path),
barcode_path=sprintf("%s/scHLAcount/genotypes/invitro", isb_path)
)
scHLA_import <- function(sample, result_path, barcode_path){
pool <- str_split(sample, "_",simplify = T)[2]
mm <- Matrix::readMM(sprintf("%s/%s_results/count_matrix.mtx", result_path, sample))
dimnames(mm) <- list(
allele = read_tsv(
sprintf("%s/%s_results/labels.tsv", result_path, sample),
col_names = "allele") %>% pull(allele),
cell = read_tsv(
sprintf("%s/%s_barcode.tsv", barcode_path, sample),
col_names = "barcode") %>% pull(barcode))
data.frame(allele=rownames(mm)[mm@i + 1], cell=colnames(mm)[mm@j + 1], count=mm@x) %>%
mutate(cell = sprintf("%s.%s", pool, cell))
}
scHLA_import(
sample="INCOV005-BL_S7",
result_path=sprintf("%s/scHLAcount/output/invitro", isb_path),
barcode_path=sprintf("%s/scHLAcount/barcodes", isb_path)
)
scHLA_import(
sample="INCOV005-BL_S7",
result_path=sprintf("%s/scHLAcount/output/invitro", isb_path),
barcode_path=sprintf("%s/scHLAcount/barcodes", isb_path)
) %>% head()
scHLA_import(
sample="INCOV005-BL_S7",
result_path=sprintf("%s/scHLAcount/output/invitro", isb_path),
barcode_path=sprintf("%s/scHLAcount/barcodes", isb_path)
)
hla_samples <- tibble(file_path = list.dirs("/labs/khatrilab/solomonb/covid/isb/scHLAcount/output/invitro/")) %>%
filter(grepl("INCOV", file_path)) %>%
mutate(sample_run = str_split(file_path, "//"),
sample_run = map(sample_run, function(x) x[[2]]),
sample_run = str_remove(sample_run, "_results")) %>%
mutate(file_path = str_replace(file_path, "//", "/")) %>%
separate(sample_run, into = c("sample", "pool"), sep = "_", remove = F)
hla_samples
hla_samples %>%
# Filter for samples with scHLA_count data
rowwise() %>% mutate(path_size = length(list.files(file_path))) %>% ungroup ()
read_tsv("../../covid/isb/scHLAcount/BL_fastq_files.txt", col_names = "sample")
tibble(genotyper = c("invitro", "arcasHLA", "optitype", "phlat", "hlaminer")) %>%
mutate(data = map(genotyper, function(x) read_tsv("../../covid/isb/scHLAcount/BL_fastq_files.txt", col_names = "sample")))
tibble(genotyper = c("invitro", "arcasHLA", "optitype", "phlat", "hlaminer")) %>%
mutate(data = map(genotyper, function(x) read_tsv("../../covid/isb/scHLAcount/BL_fastq_files.txt", col_names = "sample"))) %>%
unnest(data)
tibble(genotyper = c("invitro", "arcasHLA", "optitype", "phlat", "hlaminer")) %>%
mutate(data = map(genotyper, function(x) read_tsv("../../covid/isb/scHLAcount/BL_fastq_files.txt", col_names = "sample"))) %>%
unnest(data) %>%
mutate(result_path = sprintf("%s/ouput/%s",scHLAcount_dir, genotyper))
scHLAcount_dir <- "../../covid/isb/scHLAcount"
tibble(genotyper = c("invitro", "arcasHLA", "optitype", "phlat", "hlaminer")) %>%
mutate(data = map(genotyper, function(x) read_tsv("../../covid/isb/scHLAcount/BL_fastq_files.txt", col_names = "sample"))) %>%
unnest(data) %>%
mutate(result_path = sprintf("%s/ouput/%s",scHLAcount_dir, genotyper))
tibble(genotyper = c("invitro", "arcasHLA", "optitype", "phlat", "hlaminer")) %>%
mutate(data = map(genotyper, function(x) read_tsv("../../covid/isb/scHLAcount/BL_fastq_files.txt", col_names = "sample"))) %>%
unnest(data) %>%
mutate(result_path = sprintf("%s/ouput/%s",scHLAcount_dir, genotyper),
barcode_path = sprintf("%s/barcodes", scHLAcount_dir))
tibble(genotyper = c("invitro", "arcasHLA", "optitype", "phlat", "hlaminer")) %>%
mutate(data = map(genotyper, function(x) read_tsv("../../covid/isb/scHLAcount/BL_fastq_files.txt", col_names = "sample"))) %>%
unnest(data) %>%
mutate(result_path = sprintf("%s/ouput/%s",scHLAcount_dir, genotyper),
barcode_path = sprintf("%s/barcodes", scHLAcount_dir)) %>%
head(3) %>%
mutate(data = pmap(list(sample, result_path, barcode_path), function(s,r,b){
scHLA_import(
sample=s,
result_path=r,
barcode_path=b
)
}))
tibble(genotyper = c("invitro", "arcasHLA", "optitype", "phlat", "hlaminer")) %>%
mutate(data = map(genotyper, function(x) read_tsv("../../covid/isb/scHLAcount/BL_fastq_files.txt", col_names = "sample"))) %>%
unnest(data) %>%
mutate(result_path = sprintf("%s/ouput/%s",scHLAcount_dir, genotyper),
barcode_path = sprintf("%s/barcodes", scHLAcount_dir)) %>%
head(3)
tibble(genotyper = c("invitro", "arcasHLA", "optitype", "phlat", "hlaminer")) %>%
mutate(data = map(genotyper, function(x) read_tsv("../../covid/isb/scHLAcount/BL_fastq_files.txt", col_names = "sample"))) %>%
unnest(data) %>%
mutate(result_path = sprintf("%s/ouput/%s",scHLAcount_dir, genotyper),
barcode_path = sprintf("%s/barcodes", scHLAcount_dir)) %>%
head(3) %>%
mutate(data = pmap(list(sample, result_path, barcode_path), function(s,r,b){
try(scHLA_import(
sample=s,
result_path=r,
barcode_path=b
))
}))
scHLA_import(
sample = "INCOV005-BL_S7",
result_path = "../../covid/isb/scHLAcount/ouput/invitro",
barcode_path = "../../covid/isb/scHLAcount/barcodes"
)
list.dirs("../../covid/isb/scHLAcount/ouput/invitro")
getwd()
list.dirs("../../covid/isb/scHLAcount/")
list.dirs("../../covid/isb/scHLAcount/", recursive = F)
scHLA_import(
sample = "INCOV005-BL_S7",
result_path = "../../covid/isb/scHLAcount/output/invitro",
barcode_path = "../../covid/isb/scHLAcount/barcodes"
)
tibble(genotyper = c("invitro", "arcasHLA", "optitype", "phlat", "hlaminer")) %>%
mutate(data = map(genotyper, function(x) read_tsv("../../covid/isb/scHLAcount/BL_fastq_files.txt", col_names = "sample"))) %>%
unnest(data) %>%
mutate(result_path = sprintf("%s/output/%s",scHLAcount_dir, genotyper),
barcode_path = sprintf("%s/barcodes", scHLAcount_dir)) %>%
head(3) %>%
mutate(data = pmap(list(sample, result_path, barcode_path), function(s,r,b){
try(scHLA_import(
sample=s,
result_path=r,
barcode_path=b
))
}))
tibble(genotyper = c("invitro", "arcasHLA", "optitype", "phlat", "hlaminer")) %>%
mutate(data = map(genotyper, function(x) read_tsv("../../covid/isb/scHLAcount/BL_fastq_files.txt", col_names = "sample"))) %>%
unnest(data) %>%
mutate(result_path = sprintf("%s/output/%s",scHLAcount_dir, genotyper),
barcode_path = sprintf("%s/barcodes", scHLAcount_dir)) %>%
head(3) %>%
mutate(data = pmap(list(sample, result_path, barcode_path), function(s,r,b){
try(scHLA_import(
sample=s,
result_path=r,
barcode_path=b
))
})) %>%
unnest(data)
?try
tibble(genotyper = c("invitro", "arcasHLA", "optitype", "phlat", "hlaminer")) %>%
mutate(data = map(genotyper, function(x) read_tsv("../../covid/isb/scHLAcount/BL_fastq_files.txt", col_names = "sample"))) %>%
unnest(data) %>%
mutate(result_path = sprintf("%s/output/%s",scHLAcount_dir, genotyper),
barcode_path = sprintf("%s/barcodes", scHLAcount_dir)) %>%
head(3) %>%
mutate(data = pmap(list(sample, result_path, barcode_path), function(s,r,b){
try(scHLA_import(
sample=s,
result_path=r,
barcode_path=b
), silent = F)
})) %>%
unnest(data)
tibble(genotyper = c("invitro", "arcasHLA", "optitype", "phlat", "hlaminer")) %>%
mutate(data = map(genotyper, function(x) read_tsv("../../covid/isb/scHLAcount/BL_fastq_files.txt", col_names = "sample"))) %>%
unnest(data) %>%
mutate(result_path = sprintf("%s/output/%s",scHLAcount_dir, genotyper),
barcode_path = sprintf("%s/barcodes", scHLAcount_dir)) %>%
head(3) %>%
mutate(data = pmap(list(sample, result_path, barcode_path), function(s,r,b){
try(scHLA_import(
sample=s,
result_path=r,
barcode_path=b
), silent = F)
}))
tibble(genotyper = c("invitro", "arcasHLA", "optitype", "phlat", "hlaminer")) %>%
mutate(data = map(genotyper, function(x) read_tsv("../../covid/isb/scHLAcount/BL_fastq_files.txt", col_names = "sample"))) %>%
unnest(data) %>%
mutate(result_path = sprintf("%s/output/%s",scHLAcount_dir, genotyper),
barcode_path = sprintf("%s/barcodes", scHLAcount_dir)) %>%
head(3) %>%
mutate(data = pmap(list(sample, result_path, barcode_path), function(s,r,b){
tryCatch(scHLA_import(
sample=s,
result_path=r,
barcode_path=b
),
error = function(c) NA)
}))
tibble(genotyper = c("invitro", "arcasHLA", "optitype", "phlat", "hlaminer")) %>%
mutate(data = map(genotyper, function(x) read_tsv("../../covid/isb/scHLAcount/BL_fastq_files.txt", col_names = "sample"))) %>%
unnest(data) %>%
mutate(result_path = sprintf("%s/output/%s",scHLAcount_dir, genotyper),
barcode_path = sprintf("%s/barcodes", scHLAcount_dir)) %>%
head(3) %>%
mutate(data = pmap(list(sample, result_path, barcode_path), function(s,r,b){
tryCatch(scHLA_import(
sample=s,
result_path=r,
barcode_path=b
),
error = function(c) NA)
})) %>% unnest(data)
tibble(genotyper = c("invitro", "arcasHLA", "optitype", "phlat", "hlaminer")) %>%
mutate(data = map(genotyper, function(x) read_tsv("../../covid/isb/scHLAcount/BL_fastq_files.txt", col_names = "sample"))) %>%
unnest(data) %>%
mutate(result_path = sprintf("%s/output/%s",scHLAcount_dir, genotyper),
barcode_path = sprintf("%s/barcodes", scHLAcount_dir)) %>%
head(3) %>%
mutate(data = pmap(list(sample, result_path, barcode_path), function(s,r,b){
tryCatch(scHLA_import(
sample=s,
result_path=r,
barcode_path=b
),
error = function(c) NA)
})) %>% unnest(data) %>%
select(-data) %>% drop_na()
# Create tibble of all genotyper and sample combinations
tibble(genotyper = c("invitro", "arcasHLA", "optitype", "phlat", "hlaminer")) %>%
suppressMessages(
mutate(data = map(genotyper, function(x) read_tsv("../../covid/isb/scHLAcount/BL_fastq_files.txt", col_names = "sample"))) %>%
unnest(data) %>%
# Import data based on sample and genotyper
mutate(result_path = sprintf("%s/output/%s",scHLAcount_dir, genotyper),
barcode_path = sprintf("%s/barcodes", scHLAcount_dir)) %>%
head(3) %>%
mutate(data = pmap(list(sample, result_path, barcode_path), function(s,r,b){
tryCatch(scHLA_import(
sample=s,
result_path=r,
barcode_path=b
),
# Returns NA if no file, rather than error
error = function(c) NA)
})) %>% unnest(data) %>%
# Remove remaining data column caused by missing files,
# then remove the NAs representing those files
select(-data) %>% drop_na())
scHLAcount_dir <- "../../covid/isb/scHLAcount"
# Create tibble of all genotyper and sample combinations
tibble(genotyper = c("invitro", "arcasHLA", "optitype", "phlat", "hlaminer")) %>%
suppressMessages(
mutate(data = map(genotyper, function(x) read_tsv("../../covid/isb/scHLAcount/BL_fastq_files.txt", col_names = "sample"))) %>%
unnest(data) %>%
# Import data based on sample and genotyper
mutate(result_path = sprintf("%s/output/%s",scHLAcount_dir, genotyper),
barcode_path = sprintf("%s/barcodes", scHLAcount_dir)) %>%
head(3) %>%
mutate(data = pmap(list(sample, result_path, barcode_path), function(s,r,b){
tryCatch(scHLA_import(
sample=s,
result_path=r,
barcode_path=b
),
# Returns NA if no file, rather than error
error = function(c) NA)
})) %>% unnest(data) %>%
# Remove remaining data column caused by missing files,
# then remove the NAs representing those files
select(-data) %>% drop_na())
scHLAcount_dir <- "../../covid/isb/scHLAcount"
# Create tibble of all genotyper and sample combinations
tibble(genotyper = c("invitro", "arcasHLA", "optitype", "phlat", "hlaminer")) %>%
mutate(data = map(genotyper, function(x) suppressMessages(read_tsv("../../covid/isb/scHLAcount/BL_fastq_files.txt", col_names = "sample")))) %>%
unnest(data) %>%
# Import data based on sample and genotyper
mutate(result_path = sprintf("%s/output/%s",scHLAcount_dir, genotyper),
barcode_path = sprintf("%s/barcodes", scHLAcount_dir)) %>%
head(3) %>%
mutate(data = pmap(list(sample, result_path, barcode_path), function(s,r,b){
tryCatch(scHLA_import(
sample=s,
result_path=r,
barcode_path=b
),
# Returns NA if no file, rather than error
error = function(c) NA)
})) %>% unnest(data) %>%
# Remove remaining data column caused by missing files,
# then remove the NAs representing those files
select(-data) %>% drop_na()
scHLAcount_dir <- "../../covid/isb/scHLAcount"
# Create tibble of all genotyper and sample combinations
tibble(genotyper = c("invitro", "arcasHLA", "optitype", "phlat", "hlaminer")) %>%
mutate(data = map(genotyper, function(x) suppressMessages(read_tsv("../../covid/isb/scHLAcount/BL_fastq_files.txt", col_names = "sample")))) %>%
unnest(data) %>%
# Import data based on sample and genotyper
mutate(result_path = sprintf("%s/output/%s",scHLAcount_dir, genotyper),
barcode_path = sprintf("%s/barcodes", scHLAcount_dir)) %>%
head(3) %>%
mutate(data = pmap(list(sample, result_path, barcode_path), function(s,r,b){
tryCatch(suppressMessages(scHLA_import(
sample=s,
result_path=r,
barcode_path=b
)),
# Returns NA if no file, rather than error
error = function(c) NA)
})) %>% unnest(data) %>%
# Remove remaining data column caused by missing files,
# then remove the NAs representing those files
select(-data) %>% drop_na()
scHLAcount_dir <- "../../covid/isb/scHLAcount"
# Create tibble of all genotyper and sample combinations
tibble(genotyper = c("invitro", "arcasHLA", "optitype", "phlat", "hlaminer")) %>%
mutate(data = map(genotyper, function(x) suppressMessages(read_tsv("../../covid/isb/scHLAcount/BL_fastq_files.txt", col_names = "sample")))) %>%
unnest(data) %>%
# Import data based on sample and genotyper
mutate(result_path = sprintf("%s/output/%s",scHLAcount_dir, genotyper),
barcode_path = sprintf("%s/barcodes", scHLAcount_dir)) %>%
# head(3) %>%
mutate(data = pmap(list(sample, result_path, barcode_path), function(s,r,b){
tryCatch(suppressMessages(scHLA_import(
sample=s,
result_path=r,
barcode_path=b
)),
# Returns NA if no file, rather than error
error = function(c) NA)
})) %>% unnest(data) %>%
# Remove remaining data column caused by missing files,
# then remove the NAs representing those files
select(-data) %>% drop_na()
# Create tibble of all genotyper and sample combinations
x <- tibble(genotyper = c("invitro", "arcasHLA", "optitype", "phlat", "hlaminer")) %>%
mutate(data = map(genotyper, function(x) suppressMessages(read_tsv("../../covid/isb/scHLAcount/BL_fastq_files.txt", col_names = "sample")))) %>%
unnest(data) %>%
# Import data based on sample and genotyper
mutate(result_path = sprintf("%s/output/%s",scHLAcount_dir, genotyper),
barcode_path = sprintf("%s/barcodes", scHLAcount_dir)) %>%
# head(3) %>%
mutate(data = pmap(list(sample, result_path, barcode_path), function(s,r,b){
tryCatch(suppressMessages(scHLA_import(
sample=s,
result_path=r,
barcode_path=b
)),
# Returns NA if no file, rather than error
error = function(c) NA)
})) %>% unnest(data) %>%
# Remove remaining data column caused by missing files,
# then remove the NAs representing those files
select(-data) %>% drop_na()
scHLAcount_dir <- "../../covid/isb/scHLAcount"
# Create tibble of all genotyper and sample combinations
x <- tibble(genotyper = c("invitro", "arcasHLA", "optitype", "phlat", "hlaminer")) %>%
mutate(data = map(genotyper, function(x) suppressMessages(read_tsv("../../covid/isb/scHLAcount/BL_fastq_files.txt", col_names = "sample")))) %>%
unnest(data) %>%
# Import data based on sample and genotyper
mutate(result_path = sprintf("%s/output/%s",scHLAcount_dir, genotyper),
barcode_path = sprintf("%s/barcodes", scHLAcount_dir)) %>%
head(10) %>%
mutate(data = pmap(list(sample, result_path, barcode_path), function(s,r,b){
tryCatch(suppressMessages(scHLA_import(
sample=s,
result_path=r,
barcode_path=b
)),
# Returns NA if no file, rather than error
error = function(c) NA)
})) %>% unnest(data) %>%
# Remove remaining data column caused by missing files,
# then remove the NAs representing those files
select(-data) %>% drop_na()
View(x)
# Create tibble of all genotyper and sample combinations
x <- tibble(genotyper = c("invitro", "arcasHLA", "optitype", "phlat", "hlaminer")) %>%
mutate(data = map(genotyper, function(x) suppressMessages(read_tsv("../../covid/isb/scHLAcount/BL_fastq_files.txt", col_names = "sample")))) %>%
unnest(data) %>%
# Import data based on sample and genotyper
mutate(result_path = sprintf("%s/output/%s",scHLAcount_dir, genotyper),
barcode_path = sprintf("%s/barcodes", scHLAcount_dir)) %>%
head(20) %>%
mutate(data = pmap(list(sample, result_path, barcode_path), function(s,r,b){
tryCatch(suppressMessages(scHLA_import(
sample=s,
result_path=r,
barcode_path=b
)),
# Returns NA if no file, rather than error
error = function(c) NA)
})) %>% unnest(data) %>%
# Remove remaining data column caused by missing files,
# then remove the NAs representing those files
select(-data) %>% drop_na()
scHLAcount_dir <- "../../covid/isb/scHLAcount"
# Create tibble of all genotyper and sample combinations
x <- tibble(genotyper = c("invitro", "arcasHLA", "optitype", "phlat", "hlaminer")) %>%
mutate(data = map(genotyper, function(x) suppressMessages(read_tsv("../../covid/isb/scHLAcount/BL_fastq_files.txt", col_names = "sample")))) %>%
unnest(data) %>%
# Import data based on sample and genotyper
mutate(result_path = sprintf("%s/output/%s",scHLAcount_dir, genotyper),
barcode_path = sprintf("%s/barcodes", scHLAcount_dir)) %>%
head(30) %>%
mutate(data = pmap(list(sample, result_path, barcode_path), function(s,r,b){
tryCatch(suppressMessages(scHLA_import(
sample=s,
result_path=r,
barcode_path=b
)),
# Returns NA if no file, rather than error
error = function(c) NA)
}))
# %>% unnest(data) %>%
#   # Remove remaining data column caused by missing files,
#   # then remove the NAs representing those files
#   select(-data) %>% drop_na()
View(x)
showConnections()
showConnections()
showConnections()
