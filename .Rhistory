select(-allele_id) %>%
pivot_longer(cols = field_1:field_3, names_to = "field", values_to = "allele") %>%
pivot_wider(names_from = "genotyper", values_from = "allele", values_fn = function(x) sum(!is.na(x)), values_fill = 0) %>%
# filter(invitro != 0) %>%
### NEED TO DEAL WITH HLAMINER AMBIGOUS ALLELES
# mutate_at(vars(arcasHLA:hlaminer), funs(./invitro)) %>%
mutate_at(vars(arcasHLA:phlat), funs(./2))
pmid_arcas <- pmid_hla %>% filter(genotyper == "arcasHLA") %>% pull(sample) %>% unique()
prediction_frequency <- pmid_hla %>%
filter(sample %in% pmid_arcas) %>%
select(-allele_id) %>%
pivot_longer(cols = field_1:field_3, names_to = "field", values_to = "allele") %>%
pivot_wider(names_from = "genotyper", values_from = "allele", values_fn = function(x) sum(!is.na(x)), values_fill = 0) %>%
# filter(invitro != 0) %>%
### NEED TO DEAL WITH HLAMINER AMBIGOUS ALLELES
# mutate_at(vars(arcasHLA:hlaminer), funs(./invitro)) %>%
mutate_at(vars(arcasHLA:optitype), funs(./2)) %>%
# select(-invitro) %>%
ungroup() %>%
pivot_longer(cols = arcasHLA:optitype, names_to = "genotyper", values_to = "frequency")
prediction_frequency %>%
filter(grepl("^[ABC]", locus)) %>%
gg_frequency()
success_df <- compare_hla(hla_df = pmid_hla %>% filter(sample %in% pmid_arcas),
reference = "invitro",
exclude_missing = T,
compare_function = "accuracy")
combine_HLA_import(
path = "/labs/khatrilab/solomonb/covid/pmid30518681/scRNA/",
samples = read_lines("/labs/khatrilab/solomonb/covid/pmid30518681/scRNA/SRR_Acc_List.txt"),
invitro_path = "pmid30518681_scisco_hla.tsv",
filter_invitro = F
) %>%
rename(original_name = sample) %>%
mutate(original_name = gsub("^STU-HD-","",original_name)) %>%
# mutate(sra = ifelse(grepl("^SRR", original_name), original_name, NA)) %>%
left_join(
read_csv("/labs/khatrilab/solomonb/covid/pmid30518681/pmid30518681_samples.csv"),
by = c("original_name" = "sra")
) %>%
mutate(sample = ifelse(is.na(sample), original_name, sample)) %>%
select(-original_name, -platform)
invitro <- invitro_import(path = "pmid30518681_scisco_hla.tsv", exclude_comment_samples = T)
View(invitro)
# read_lines("/labs/khatrilab/solomonb/covid/pmid30518681/scRNA/SRR_Acc_List.txt")
pmid_hla <- combine_HLA_import(
path = "/labs/khatrilab/solomonb/covid/pmid30518681/scRNA/",
samples = read_lines("/labs/khatrilab/solomonb/covid/pmid30518681/scRNA/SRR_Acc_List.txt"),
invitro_path = "pmid30518681_scisco_hla.tsv",
filter_invitro = T
) %>%
rename(original_name = sample) %>%
mutate(original_name = gsub("^STU-HD-","",original_name)) %>%
# mutate(sra = ifelse(grepl("^SRR", original_name), original_name, NA)) %>%
left_join(
read_csv("/labs/khatrilab/solomonb/covid/pmid30518681/pmid30518681_samples.csv"),
by = c("original_name" = "sra")
) %>%
mutate(sample = ifelse(is.na(sample), original_name, sample)) %>%
select(-original_name, -platform)
pmid_hla <- format_hla_table(pmid_hla)
pmid_hla
View(pmid_hla)
pmid_hla <- combine_HLA_import(
path = "/labs/khatrilab/solomonb/covid/pmid30518681/scRNA/",
samples = read_lines("/labs/khatrilab/solomonb/covid/pmid30518681/scRNA/SRR_Acc_List.txt"),
invitro_path = "pmid30518681_scisco_hla.tsv",
filter_invitro = T
) %>%
rename(original_name = sample) %>%
mutate(original_name = gsub("^STU-HD-","",original_name)) %>%
# mutate(sra = ifelse(grepl("^SRR", original_name), original_name, NA)) %>%
left_join(
read_csv("/labs/khatrilab/solomonb/covid/pmid30518681/pmid30518681_samples.csv"),
by = c("original_name" = "sra")
) %>%
mutate(sample = ifelse(is.na(sample), original_name, sample)) %>%
select(-original_name, -platform)
invitro_hla <- invitro_import(path = "pmid30518681_scisco_hla.tsv", exclude_comment_samples = T)
# read_lines("/labs/khatrilab/solomonb/covid/pmid30518681/scRNA/SRR_Acc_List.txt")
pmid_hla <- combine_HLA_import(
path = "/labs/khatrilab/solomonb/covid/pmid30518681/scRNA/",
samples = read_lines("/labs/khatrilab/solomonb/covid/pmid30518681/scRNA/SRR_Acc_List.txt"),
invitro_path = "pmid30518681_scisco_hla.tsv",
filter_invitro = T
) %>%
rename(original_name = sample) %>%
mutate(original_name = gsub("^STU-HD-","",original_name)) %>%
# mutate(sra = ifelse(grepl("^SRR", original_name), original_name, NA)) %>%
left_join(
read_csv("/labs/khatrilab/solomonb/covid/pmid30518681/pmid30518681_samples.csv"),
by = c("original_name" = "sra")
) %>%
mutate(sample = ifelse(is.na(sample), original_name, sample)) %>%
select(-original_name, -platform) %>%
bind_rows(invitro_hla)
invitro_hla <- invitro_import(path = "pmid30518681_scisco_hla.tsv", exclude_comment_samples = T) %>%
mutate(sample = gsub("STU-HD-","",sample))
# read_lines("/labs/khatrilab/solomonb/covid/pmid30518681/scRNA/SRR_Acc_List.txt")
pmid_hla <- combine_HLA_import(
path = "/labs/khatrilab/solomonb/covid/pmid30518681/scRNA/",
samples = read_lines("/labs/khatrilab/solomonb/covid/pmid30518681/scRNA/SRR_Acc_List.txt"),
invitro_path = "pmid30518681_scisco_hla.tsv",
filter_invitro = T
) %>%
rename(original_name = sample) %>%
mutate(original_name = gsub("^STU-HD-","",original_name)) %>%
# mutate(sra = ifelse(grepl("^SRR", original_name), original_name, NA)) %>%
left_join(
read_csv("/labs/khatrilab/solomonb/covid/pmid30518681/pmid30518681_samples.csv"),
by = c("original_name" = "sra")
) %>%
mutate(sample = ifelse(is.na(sample), original_name, sample)) %>%
select(-original_name, -platform) %>%
bind_rows(invitro_hla)
pmid_hla <- format_hla_table(pmid_hla)
pmid_hla
# read_lines("/labs/khatrilab/solomonb/covid/pmid30518681/scRNA/SRR_Acc_List.txt")
pmid_hla <- combine_HLA_import(
path = "/labs/khatrilab/solomonb/covid/pmid30518681/scRNA/",
samples = read_lines("/labs/khatrilab/solomonb/covid/pmid30518681/scRNA/SRR_Acc_List.txt"),
invitro_path = "pmid30518681_scisco_hla.tsv",
filter_invitro = T
) %>%
rename(original_name = sample) %>%
mutate(original_name = gsub("^STU-HD-","",original_name)) %>%
# mutate(sra = ifelse(grepl("^SRR", original_name), original_name, NA)) %>%
left_join(
read_csv("/labs/khatrilab/solomonb/covid/pmid30518681/pmid30518681_samples.csv"),
by = c("original_name" = "sra")
) %>%
mutate(sample = ifelse(is.na(sample), original_name, sample)) %>%
select(-original_name, -platform) %>%
bind_rows(invitro_hla)
pmid_hla <- format_hla_table(pmid_hla)
pmid_hla
View(pmid_hla)
pmid_arcas <- pmid_hla %>% filter(genotyper == "arcasHLA") %>% pull(sample) %>% unique()
prediction_frequency <- pmid_hla %>%
filter(sample %in% pmid_arcas) %>%
select(-allele_id) %>%
pivot_longer(cols = field_1:field_3, names_to = "field", values_to = "allele") %>%
pivot_wider(names_from = "genotyper", values_from = "allele", values_fn = function(x) sum(!is.na(x)), values_fill = 0) %>%
# filter(invitro != 0) %>%
### NEED TO DEAL WITH HLAMINER AMBIGOUS ALLELES
# mutate_at(vars(arcasHLA:hlaminer), funs(./invitro)) %>%
mutate_at(vars(arcasHLA:optitype), funs(./2)) %>%
select(-invitro) %>%
ungroup() %>%
pivot_longer(cols = arcasHLA, names_to = "genotyper", values_to = "frequency")
prediction_frequency %>%
filter(grepl("^[ABC]", locus)) %>%
gg_frequency()
pmid_hla %>%
filter(sample %in% pmid_arcas) %>%
select(-allele_id) %>%
pivot_longer(cols = field_1:field_3, names_to = "field", values_to = "allele") %>%
pivot_wider(names_from = "genotyper", values_from = "allele", values_fn = function(x) sum(!is.na(x)), values_fill = 0) %>%
# filter(invitro != 0) %>%
### NEED TO DEAL WITH HLAMINER AMBIGOUS ALLELES
# mutate_at(vars(arcasHLA:hlaminer), funs(./invitro)) %>%
mutate_at(vars(arcasHLA:optitype), funs(./2)) %>%
select(-invitro) %>%
ungroup() %>%
pivot_longer(cols = arcasHLA, names_to = "genotyper", values_to = "frequency")
pmid_hla %>%
filter(sample %in% pmid_arcas) %>%
select(-allele_id) %>%
pivot_longer(cols = field_1:field_3, names_to = "field", values_to = "allele") %>%
pivot_wider(names_from = "genotyper", values_from = "allele", values_fn = function(x) sum(!is.na(x)), values_fill = 0) %>%
# filter(invitro != 0) %>%
### NEED TO DEAL WITH HLAMINER AMBIGOUS ALLELES
# mutate_at(vars(arcasHLA:hlaminer), funs(./invitro)) %>%
mutate_at(vars(arcasHLA:optitype), funs(./2))
pmid_arcas <- pmid_hla %>% filter(genotyper == "arcasHLA") %>% pull(sample) %>% unique()
prediction_frequency <- pmid_hla %>%
filter(sample %in% pmid_arcas) %>%
select(-allele_id) %>%
pivot_longer(cols = field_1:field_3, names_to = "field", values_to = "allele") %>%
pivot_wider(names_from = "genotyper", values_from = "allele", values_fn = function(x) sum(!is.na(x)), values_fill = 0) %>%
# filter(invitro != 0) %>%
### NEED TO DEAL WITH HLAMINER AMBIGOUS ALLELES
# mutate_at(vars(arcasHLA:hlaminer), funs(./invitro)) %>%
mutate_at(vars(arcasHLA:optitype), funs(./2)) %>%
select(-invitro) %>%
ungroup() %>%
pivot_longer(cols = arcasHLA:optitype, names_to = "genotyper", values_to = "frequency")
prediction_frequency %>%
filter(grepl("^[ABC]", locus)) %>%
gg_frequency()
success_df <- compare_hla(hla_df = pmid_hla %>% filter(sample %in% pmid_arcas),
reference = "invitro",
exclude_missing = T,
compare_function = "accuracy")
success_df%>%
filter(grepl("^[ABC]", locus)) %>%
gg_accuracy() +
ylab("Success")
accuracy_df <- compare_hla(hla_df = pmid_hla %>% filter(sample %in% pmid_arcas),
reference = "invitro",
exclude_missing = F,
compare_function = "accuracy")
accuracy_df%>%
filter(grepl("^[ABC]", locus)) %>%
gg_accuracy()
pmid_bulk_hla <- combine_HLA_import(
path = "/labs/khatrilab/solomonb/covid/pmid30518681/bulkRNA/",
samples = read_lines("/labs/khatrilab/solomonb/covid/pmid30518681/bulkRNA/SRR_Acc_List.txt"),
invitro_path = "pmid30518681_scisco_hla.tsv",
filter_invitro = T
)
combine_HLA_import(
path = "/labs/khatrilab/solomonb/covid/pmid30518681/bulkRNA/",
samples = read_lines("/labs/khatrilab/solomonb/covid/pmid30518681/bulkRNA/bulk_sra_accession.txt.txt"),
invitro_path = "pmid30518681_scisco_hla.tsv",
filter_invitro = T
)
combine_HLA_import(
path = "/labs/khatrilab/solomonb/covid/pmid30518681/bulkRNA/",
samples = read_lines("/labs/khatrilab/solomonb/covid/pmid30518681/bulkRNA/bulk_sra_accession.txt"),
invitro_path = "pmid30518681_scisco_hla.tsv",
filter_invitro = T
)
combine_HLA_import(
path = "/labs/khatrilab/solomonb/covid/pmid30518681/bulkRNA/",
samples = read_lines("/labs/khatrilab/solomonb/covid/pmid30518681/bulkRNA/bulk_sra_accession.txt"),
# invitro_path = "pmid30518681_scisco_hla.tsv",
filter_invitro = T
) %>%
rename(original_name = sample) %>%
# mutate(original_name = gsub("^STU-HD-","",original_name)) %>%
# mutate(sra = ifelse(grepl("^SRR", original_name), original_name, NA)) %>%
left_join(
read_csv("/labs/khatrilab/solomonb/covid/pmid30518681/pmid30518681_samples.csv"),
by = c("original_name" = "sra")
) %>%
mutate(sample = ifelse(is.na(sample), original_name, sample)) %>%
select(-original_name, -platform) %>%
bind_rows(invitro_hla)
# read_lines("/labs/khatrilab/solomonb/covid/pmid30518681/scRNA/SRR_Acc_List.txt")
pmid_bulk_hla <- combine_HLA_import(
path = "/labs/khatrilab/solomonb/covid/pmid30518681/bulkRNA/",
samples = read_lines("/labs/khatrilab/solomonb/covid/pmid30518681/bulkRNA/bulk_sra_accession.txt"),
# invitro_path = "pmid30518681_scisco_hla.tsv",
filter_invitro = T
) %>%
rename(original_name = sample) %>%
# mutate(original_name = gsub("^STU-HD-","",original_name)) %>%
# mutate(sra = ifelse(grepl("^SRR", original_name), original_name, NA)) %>%
left_join(
read_csv("/labs/khatrilab/solomonb/covid/pmid30518681/pmid30518681_samples.csv"),
by = c("original_name" = "sra")
) %>%
mutate(sample = ifelse(is.na(sample), original_name, sample)) %>%
select(-original_name, -platform) %>%
bind_rows(invitro_hla)
pmid_bulk_hla <- format_hla_table(pmid_hla)
View(pmid_bulk_hla)
# read_lines("/labs/khatrilab/solomonb/covid/pmid30518681/scRNA/SRR_Acc_List.txt")
pmid_bulk_hla <- combine_HLA_import(
path = "/labs/khatrilab/solomonb/covid/pmid30518681/bulkRNA/",
samples = read_lines("/labs/khatrilab/solomonb/covid/pmid30518681/bulkRNA/bulk_sra_accession.txt"),
# invitro_path = "pmid30518681_scisco_hla.tsv",
filter_invitro = T
) %>%
rename(original_name = sample) %>%
# mutate(original_name = gsub("^STU-HD-","",original_name)) %>%
# mutate(sra = ifelse(grepl("^SRR", original_name), original_name, NA)) %>%
left_join(
read_csv("/labs/khatrilab/solomonb/covid/pmid30518681/pmid30518681_samples.csv"),
by = c("original_name" = "sra")
) %>%
mutate(sample = ifelse(is.na(sample), original_name, sample)) %>%
select(-original_name, -platform) %>%
bind_rows(invitro_hla)
pmid_bulk_hla <- format_hla_table(pmid_hla)
# read_lines("/labs/khatrilab/solomonb/covid/pmid30518681/scRNA/SRR_Acc_List.txt")
pmid_bulk_hla <- combine_HLA_import(
path = "/labs/khatrilab/solomonb/covid/pmid30518681/bulkRNA/",
samples = read_lines("/labs/khatrilab/solomonb/covid/pmid30518681/bulkRNA/bulk_sra_accession.txt"),
# invitro_path = "pmid30518681_scisco_hla.tsv",
filter_invitro = T
) %>%
rename(original_name = sample) %>%
# mutate(original_name = gsub("^STU-HD-","",original_name)) %>%
# mutate(sra = ifelse(grepl("^SRR", original_name), original_name, NA)) %>%
left_join(
read_csv("/labs/khatrilab/solomonb/covid/pmid30518681/pmid30518681_samples.csv"),
by = c("original_name" = "sra")
) %>%
mutate(sample = ifelse(is.na(sample), original_name, sample)) %>%
select(-original_name, -platform) %>%
bind_rows(invitro_hla)
# read_lines("/labs/khatrilab/solomonb/covid/pmid30518681/scRNA/SRR_Acc_List.txt")
pmid_hla <- combine_HLA_import(
path = "/labs/khatrilab/solomonb/covid/pmid30518681/scRNA/",
samples = read_lines("/labs/khatrilab/solomonb/covid/pmid30518681/scRNA/SRR_Acc_List.txt"),
invitro_path = "pmid30518681_scisco_hla.tsv",
filter_invitro = T
) %>%
rename(original_name = sample) %>%
mutate(original_name = gsub("^STU-HD-","",original_name)) %>%
# mutate(sra = ifelse(grepl("^SRR", original_name), original_name, NA)) %>%
left_join(
read_csv("/labs/khatrilab/solomonb/covid/pmid30518681/pmid30518681_samples.csv"),
by = c("original_name" = "sra")
) %>%
mutate(sample = ifelse(is.na(sample), original_name, sample)) %>%
select(-original_name, -platform) %>%
bind_rows(invitro_hla)
View(pmid_hla)
pmid_hla <- format_hla_table(pmid_hla)
pmid_hla
pmid_bulk_hla <- format_hla_table(pmid_bulk_hla)
pmid_bulk_hla
success_df <- compare_hla(hla_df = pmid_bulk_hla %>% filter(sample %in% pmid_arcas),
reference = "invitro",
exclude_missing = T,
compare_function = "accuracy")
success_df%>%
filter(grepl("^[ABC]", locus)) %>%
gg_accuracy() +
ylab("Success")
accuracy_df <- compare_hla(hla_df = pmid_bulk_hla %>% filter(sample %in% pmid_arcas),
reference = "invitro",
exclude_missing = F,
compare_function = "accuracy")
accuracy_df%>%
filter(grepl("^[ABC]", locus)) %>%
gg_accuracy()
accuracy_df <- compare_hla(hla_df = pmid_bulk_hla %>% filter(sample %in% pmid_arcas),
reference = "invitro",
exclude_missing = F,
compare_function = "accuracy")
c1_a_3p <- accuracy_df%>%
filter(grepl("BL$", sample)) %>%
filter(grepl("^[ABC]", locus)) %>%
gg_accuracy()
c1_a_3p
accuracy_df <- compare_hla(hla_df = pmid_bulk_hla %>% filter(sample %in% pmid_arcas),
reference = "invitro",
exclude_missing = F,
compare_function = "accuracy")
c1_a_3p <- accuracy_df%>%
filter(grepl("^[ABC]", locus)) %>%
gg_accuracy()
c1_a_3p
accuracy_df <- compare_hla(hla_df = pmid_bulk_hla %>% filter(sample %in% pmid_arcas),
reference = "invitro",
exclude_missing = F,
compare_function = "accuracy")
c1_a_3p <- accuracy_df%>%
filter(grepl("^[ABC]", locus)) %>%
gg_accuracy()
c1_a_3p
dp_a_3p <- accuracy_df %>%
filter(grepl("^DP", locus) & genotyper %in% c("arcasHLA", "hlaminer"),) %>%
gg_accuracy()
dq_a_3p <- accuracy_df %>%
filter(grepl("^DQ", locus) & genotyper %in% c("arcasHLA", "hlaminer", "phlat"),) %>%
gg_accuracy()
drb1_a_3p <- accuracy_df %>%
filter(grepl("^DRB1", locus) & genotyper %in% c("arcasHLA", "hlaminer", "phlat"),) %>%
gg_accuracy()
drb345_a_3p <- accuracy_df %>%
filter(grepl("^DRB[345]", locus) & genotyper %in% c("arcasHLA", "hlaminer"),) %>%
gg_accuracy()
c2_a_3p <- dp_a_3p|
strip_y(dq_a_3p)|
# strip_y(dra_a)|
strip_y(drb1_a_3p)|
strip_y(drb345_a_3p)|
plot_layout(widths = c(6,6,3,9))
c2_a_3p
accuracy_df <- compare_hla(hla_df = pmid_hla %>% filter(sample %in% pmid_arcas),
reference = "invitro",
exclude_missing = F,
compare_function = "accuracy")
c1_a_3p <- accuracy_df%>%
filter(grepl("^[ABC]", locus)) %>%
gg_accuracy()
c1_a_3p
dp_a_3p <- accuracy_df %>%
filter(grepl("^DP", locus) & genotyper %in% c("arcasHLA", "hlaminer"),) %>%
gg_accuracy()
dq_a_3p <- accuracy_df %>%
filter(grepl("^DQ", locus) & genotyper %in% c("arcasHLA", "hlaminer", "phlat"),) %>%
gg_accuracy()
drb1_a_3p <- accuracy_df %>%
filter(grepl("^DRB1", locus) & genotyper %in% c("arcasHLA", "hlaminer", "phlat"),) %>%
gg_accuracy()
drb345_a_3p <- accuracy_df %>%
filter(grepl("^DRB[345]", locus) & genotyper %in% c("arcasHLA", "hlaminer"),) %>%
gg_accuracy()
c2_a_3p <- dp_a_3p|
strip_y(dq_a_3p)|
# strip_y(dra_a)|
strip_y(drb1_a_3p)|
strip_y(drb345_a_3p)|
plot_layout(widths = c(6,6,3,9))
c2_a_3p
c1_a <- accuracy_df%>%
filter(grepl("^[ABC]", locus)) %>%
gg_accuracy()
dp_a <- accuracy_df %>%
filter(grepl("^DP", locus) & genotyper %in% c("arcasHLA", "hlaminer"),) %>%
gg_accuracy()
dq_a <- accuracy_df %>%
filter(grepl("^DQ", locus) & genotyper %in% c("arcasHLA", "hlaminer", "phlat"),) %>%
gg_accuracy()
drb1_a <- accuracy_df %>%
filter(grepl("^DRB1", locus) & genotyper %in% c("arcasHLA", "hlaminer", "phlat"),) %>%
gg_accuracy()
drb345_a <- accuracy_df %>%
filter(grepl("^DRB[345]", locus) & genotyper %in% c("arcasHLA", "hlaminer"),) %>%
gg_accuracy()
c2_a <- dp_a|
strip_y(dq_a)|
strip_y(drb1_a)|
strip_y(drb345_a)|
plot_layout(widths = c(6,6,3,9))
c1_a | c2_a | plot_layout(widths = c(3,11))
c1_a <- accuracy_df%>%
filter(grepl("^[ABC]", locus)) %>%
gg_accuracy()
dp_a <- accuracy_df %>%
filter(grepl("^DP", locus) & genotyper %in% c("arcasHLA", "hlaminer"),) %>%
gg_accuracy()
dq_a <- accuracy_df %>%
filter(grepl("^DQ", locus) & genotyper %in% c("arcasHLA", "hlaminer", "phlat"),) %>%
gg_accuracy()
drb1_a <- accuracy_df %>%
filter(grepl("^DRB1", locus) & genotyper %in% c("arcasHLA", "hlaminer", "phlat"),) %>%
gg_accuracy()
drb345_a <- accuracy_df %>%
filter(grepl("^DRB[345]", locus) & genotyper %in% c("arcasHLA", "hlaminer"),) %>%
gg_accuracy()
c2_a <- dp_a|
strip_y(dq_a)|
strip_y(drb1_a)|
strip_y(drb345_a)|
plot_layout(widths = c(6,6,3,9))
c1_a | c2_a | plot_layout(widths = c(4,10))
c1_a <- accuracy_df%>%
filter(grepl("^[ABC]", locus)) %>%
gg_accuracy()
dp_a <- accuracy_df %>%
filter(grepl("^DP", locus) & genotyper %in% c("arcasHLA", "hlaminer"),) %>%
gg_accuracy()
dq_a <- accuracy_df %>%
filter(grepl("^DQ", locus) & genotyper %in% c("arcasHLA", "hlaminer", "phlat"),) %>%
gg_accuracy()
drb1_a <- accuracy_df %>%
filter(grepl("^DRB1", locus) & genotyper %in% c("arcasHLA", "hlaminer", "phlat"),) %>%
gg_accuracy()
drb345_a <- accuracy_df %>%
filter(grepl("^DRB[345]", locus) & genotyper %in% c("arcasHLA", "hlaminer"),) %>%
gg_accuracy()
c2_a <- dp_a|
strip_y(dq_a)|
strip_y(drb1_a)|
strip_y(drb345_a)|
plot_layout(widths = c(6,6,3,9))
c1_a | c2_a | plot_layout(widths = c(4,12))
c1_a <- accuracy_df%>%
filter(grepl("^[ABC]", locus)) %>%
gg_accuracy()
dp_a <- accuracy_df %>%
filter(grepl("^DP", locus) & genotyper %in% c("arcasHLA", "hlaminer"),) %>%
gg_accuracy()
dq_a <- accuracy_df %>%
filter(grepl("^DQ", locus) & genotyper %in% c("arcasHLA", "hlaminer", "phlat"),) %>%
gg_accuracy()
drb1_a <- accuracy_df %>%
filter(grepl("^DRB1", locus) & genotyper %in% c("arcasHLA", "hlaminer", "phlat"),) %>%
gg_accuracy()
drb345_a <- accuracy_df %>%
filter(grepl("^DRB[345]", locus) & genotyper %in% c("arcasHLA", "hlaminer"),) %>%
gg_accuracy()
c2_a <- dp_a|
strip_y(dq_a)|
strip_y(drb1_a)|
strip_y(drb345_a)|
plot_layout(widths = c(6,6,3,9))
c1_a | c2_a | plot_layout(widths = c(4,13))
c1_a | c2_a | plot_layout(widths = c(4,13))
c1_a | c2_a | plot_layout(widths = c(4,13))
accuracy_df <- compare_hla(hla_df = pmid_bulk_hla %>% filter(sample %in% pmid_arcas),
reference = "invitro",
exclude_missing = F,
compare_function = "accuracy")
c1_a <- accuracy_df%>%
filter(grepl("^[ABC]", locus)) %>%
gg_accuracy()
dp_a <- accuracy_df %>%
filter(grepl("^DP", locus) & genotyper %in% c("arcasHLA", "hlaminer"),) %>%
gg_accuracy()
dq_a <- accuracy_df %>%
filter(grepl("^DQ", locus) & genotyper %in% c("arcasHLA", "hlaminer", "phlat"),) %>%
gg_accuracy()
drb1_a <- accuracy_df %>%
filter(grepl("^DRB1", locus) & genotyper %in% c("arcasHLA", "hlaminer", "phlat"),) %>%
gg_accuracy()
drb345_a <- accuracy_df %>%
filter(grepl("^DRB[345]", locus) & genotyper %in% c("arcasHLA", "hlaminer"),) %>%
gg_accuracy()
c2_a <- dp_a|
strip_y(dq_a)|
strip_y(drb1_a)|
strip_y(drb345_a)|
plot_layout(widths = c(6,6,3,9))
c1_a | c2_a | plot_layout(widths = c(4,13))
