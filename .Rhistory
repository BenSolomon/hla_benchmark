} else {
NULL
}
}
# hlaminer_import(path = sprintf("%s/hla_miner", isb_path), sample = "INCOV003-BL")
### Combined import function
combine_HLA_import <- function(path, samples){
invitro <- invitro_import()
arcas <- arcas_import(path = sprintf("%s/arcasHLA", path))
phlat <- tibble(sample = samples) %>%
mutate(data = map(sample, function(x) {
phlat_import(path = sprintf("%s/phlat", path), sample = x)
})) %>%
unnest(data)
opti <- tibble(sample = samples) %>%
mutate(data = map(sample, function(x) {
optitype_import(path = sprintf("%s/optitype", path), sample = x)
})) %>%
unnest(data)
miner <- tibble(sample = samples) %>%
mutate(data = map(sample, function(x) {
hlaminer_import(path = sprintf("%s/hla_miner", path), sample = x)
})) %>%
unnest(data)
# opti
bind_rows(arcas, phlat, opti, miner, invitro) %>%
drop_na()
}
x <- combine_HLA_import(path = isb_path, samples = isb_samples)
source('/labs/khatrilab/solomonb/hla_project/hla_benchmark/data_import_functions.R', echo=TRUE)
source('/labs/khatrilab/solomonb/hla_project/hla_benchmark/data_import_functions.R', echo=TRUE)
source('/labs/khatrilab/solomonb/hla_project/hla_benchmark/data_import_functions.R', echo=TRUE)
isb_samples <- read_tsv("/labs/khatrilab/solomonb/covid/isb/logs/210217_232725/parallel.log") %>%
separate(Command, into = c(NA, "sample"), sep = " ") %>%
pull(sample) %>% unique()
x <- combine_HLA_import(path = "/labs/khatrilab/solomonb/covid/isb", samples = isb_samples)
### Combined import function
combine_HLA_import <- function(path, samples){
suppressMessages(
invitro <- invitro_import()
arcas <- arcas_import(path = sprintf("%s/arcasHLA", path))
phlat <- tibble(sample = samples) %>%
mutate(data = map(sample, function(x) {
phlat_import(path = sprintf("%s/phlat", path), sample = x)
})) %>%
unnest(data)
opti <- tibble(sample = samples) %>%
mutate(data = map(sample, function(x) {
optitype_import(path = sprintf("%s/optitype", path), sample = x)
})) %>%
unnest(data)
miner <- tibble(sample = samples) %>%
mutate(data = map(sample, function(x) {
hlaminer_import(path = sprintf("%s/hla_miner", path), sample = x)
})) %>%
unnest(data)
bind_rows(arcas, phlat, opti, miner, invitro) %>%
drop_na()
)
}
### Combined import function
combine_HLA_import <- function(path, samples){
suppressMessages(
{  invitro <- invitro_import()
arcas <- arcas_import(path = sprintf("%s/arcasHLA", path))
phlat <- tibble(sample = samples) %>%
mutate(data = map(sample, function(x) {
phlat_import(path = sprintf("%s/phlat", path), sample = x)
})) %>%
unnest(data)
opti <- tibble(sample = samples) %>%
mutate(data = map(sample, function(x) {
optitype_import(path = sprintf("%s/optitype", path), sample = x)
})) %>%
unnest(data)
miner <- tibble(sample = samples) %>%
mutate(data = map(sample, function(x) {
hlaminer_import(path = sprintf("%s/hla_miner", path), sample = x)
})) %>%
unnest(data)
# opti
bind_rows(arcas, phlat, opti, miner, invitro) %>%
drop_na()})
}
x <- combine_HLA_import(path = "/labs/khatrilab/solomonb/covid/isb", samples = isb_samples)
hlaminer_import(path = sprintf("%s/hla_miner", isb_path), sample = "INCOV003-BL")
isb_path <- "/labs/khatrilab/solomonb/covid/isb"
isb_samples <- read_tsv("/labs/khatrilab/solomonb/covid/isb/logs/210217_232725/parallel.log") %>%
separate(Command, into = c(NA, "sample"), sep = " ") %>%
pull(sample) %>% unique()
hlaminer_import(path = sprintf("%s/hla_miner", isb_path), sample = "INCOV003-BL")
### HLAMiner import
hlaminer_import <- function(path, sample){
sample_path <- sprintf("%s/HLAminer_HPRA_%s.csv", path, sample)
if (file.exists(sample_path)){
tibble(lines = read_lines(sample_path)) %>%
filter(grepl("^HLA|\t", lines)) %>%
separate(lines, into = c("hla", "prediction", "allele"), sep = "\t",
fill = "right", extra = "drop") %>%
mutate_all(function(x) ifelse(x=="",NA,x)) %>%
fill(hla, prediction, .direction = "down") %>%
drop_na() %>%
separate(allele, into = c("allele", "score", "expected", "confidence"),
sep = ",", fill = "right", extra = ) %>%
group_by(hla, prediction) %>%
mutate_at(vars(c(score, expected, confidence)), as.numeric) %>%
# Clean up names
mutate(allele_id = map_chr(prediction, str_extract, "[1-9]")) %>%
mutate(allele = gsub("[A-Z]$", "", allele)) %>%
# Select highest score
group_by(hla, allele_id) %>%
top_n(1, score) %>%
ungroup() %>%
select(allele_id, allele) %>%
mutate(genotyper = "hlaminer")
} else {
NULL
}
}
hlaminer_import(path = sprintf("%s/hla_miner", isb_path), sample = "INCOV003-BL")
optitype_import(path = sprintf("%s/optitype", isb_path), sample = "INCOV001-CV")
phlat_import(path = sprintf("%s/phlat", isb_path), sample = "INCOV001-CV")
arcas_import(path = sprintf("%s/arcasHLA", isb_path))
source('/labs/khatrilab/solomonb/hla_project/hla_benchmark/data_import_functions.R', echo=TRUE)
x
invitro_import()
### Import ISB molecular genotyping
invitro_import <- function(path = "/local-scratch/datasets/ISBOtherCovid/hla-haplotyping/scisco-genetics/data/hla_2020-10-23_1457.tsv"){
read_tsv(path) %>%
select(`Sample ID`, `Allele 1`, `Allele 2`) %>%
pivot_longer(cols = !`Sample ID`, names_to = "allele_id", values_to = "allele" ) %>%
filter(!grepl("Not_Present", allele)) %>%
separate(allele, into = c("locus", "fields"), sep = "\\*", fill = "right") %>%
separate(fields, into = c("field_1", "field_2", "field_3"), sep = ":", fill = "right", extra = "drop") %>%
rename("sample" = "Sample ID") %>%
mutate(allele_id = str_sub(allele_id, -1),
genotyper = "invitro")
}
invitro_import()
x <- combine_HLA_import(path = isb_path, samples = isb_samples)
### Combined import function
combine_HLA_import <- function(path, samples){
suppressMessages({
invitro <- invitro_import()
arcas <- arcas_import(path = sprintf("%s/arcasHLA", path))
phlat <- tibble(sample = samples) %>%
mutate(data = map(sample, function(x) {
phlat_import(path = sprintf("%s/phlat", path), sample = x)
})) %>%
unnest(data)
opti <- tibble(sample = samples) %>%
mutate(data = map(sample, function(x) {
optitype_import(path = sprintf("%s/optitype", path), sample = x)
})) %>%
unnest(data)
miner <- tibble(sample = samples) %>%
mutate(data = map(sample, function(x) {
hlaminer_import(path = sprintf("%s/hla_miner", path), sample = x)
})) %>%
unnest(data)
bind_rows(arcas, phlat, opti, miner, invitro) %>%
drop_na()
})
}
x <- combine_HLA_import(path = isb_path, samples = isb_samples)
x
### Combined import function
combine_HLA_import <- function(path, samples){
suppressMessages({
invitro <- invitro_import()
arcas <- arcas_import(path = sprintf("%s/arcasHLA", path))
phlat <- tibble(sample = samples) %>%
mutate(data = map(sample, function(x) {
phlat_import(path = sprintf("%s/phlat", path), sample = x)
})) %>%
unnest(data)
opti <- tibble(sample = samples) %>%
mutate(data = map(sample, function(x) {
optitype_import(path = sprintf("%s/optitype", path), sample = x)
})) %>%
unnest(data)
miner <- tibble(sample = samples) %>%
mutate(data = map(sample, function(x) {
hlaminer_import(path = sprintf("%s/hla_miner", path), sample = x)
})) %>%
unnest(data)
})
bind_rows(arcas, phlat, opti, miner, invitro) %>%
drop_na()
}
x <- combine_HLA_import(path = isb_path, samples = isb_samples)
### Combined import function
combine_HLA_import <- function(path, samples){
# suppressMessages({
invitro <- invitro_import()
arcas <- arcas_import(path = sprintf("%s/arcasHLA", path))
phlat <- tibble(sample = samples) %>%
mutate(data = map(sample, function(x) {
phlat_import(path = sprintf("%s/phlat", path), sample = x)
})) %>%
unnest(data)
opti <- tibble(sample = samples) %>%
mutate(data = map(sample, function(x) {
optitype_import(path = sprintf("%s/optitype", path), sample = x)
})) %>%
unnest(data)
miner <- tibble(sample = samples) %>%
mutate(data = map(sample, function(x) {
hlaminer_import(path = sprintf("%s/hla_miner", path), sample = x)
})) %>%
unnest(data)
bind_rows(arcas, phlat, opti, miner, invitro) %>%
drop_na()
# })
}
x <- combine_HLA_import(path = isb_path, samples = isb_samples)
### Combined import function
combine_HLA_import <- function(path, samples){
suppressMessages({
invitro <- invitro_import()
# arcas <- arcas_import(path = sprintf("%s/arcasHLA", path))
#
# phlat <- tibble(sample = samples) %>%
#   mutate(data = map(sample, function(x) {
#     phlat_import(path = sprintf("%s/phlat", path), sample = x)
#   })) %>%
#   unnest(data)
#
# opti <- tibble(sample = samples) %>%
#   mutate(data = map(sample, function(x) {
#     optitype_import(path = sprintf("%s/optitype", path), sample = x)
#   })) %>%
#   unnest(data)
#
# miner <- tibble(sample = samples) %>%
#   mutate(data = map(sample, function(x) {
#     hlaminer_import(path = sprintf("%s/hla_miner", path), sample = x)
#   })) %>%
#   unnest(data)
bind_rows(invitro) %>%
drop_na()
})
}
x <- combine_HLA_import(path = isb_path, samples = isb_samples)
View(x)
suppressMessages({
invitro <- invitro_import()
arcas <- arcas_import(path = sprintf("%s/arcasHLA", path))
#
# phlat <- tibble(sample = samples) %>%
#   mutate(data = map(sample, function(x) {
#     phlat_import(path = sprintf("%s/phlat", path), sample = x)
#   })) %>%
#   unnest(data)
#
# opti <- tibble(sample = samples) %>%
#   mutate(data = map(sample, function(x) {
#     optitype_import(path = sprintf("%s/optitype", path), sample = x)
#   })) %>%
#   unnest(data)
#
# miner <- tibble(sample = samples) %>%
#   mutate(data = map(sample, function(x) {
#     hlaminer_import(path = sprintf("%s/hla_miner", path), sample = x)
#   })) %>%
#   unnest(data)
bind_rows(arcas, invitro) %>%
drop_na()
})
### Combined import function
combine_HLA_import <- function(path, samples){
suppressMessages({
invitro <- invitro_import()
arcas <- arcas_import(path = sprintf("%s/arcasHLA", path))
#
# phlat <- tibble(sample = samples) %>%
#   mutate(data = map(sample, function(x) {
#     phlat_import(path = sprintf("%s/phlat", path), sample = x)
#   })) %>%
#   unnest(data)
#
# opti <- tibble(sample = samples) %>%
#   mutate(data = map(sample, function(x) {
#     optitype_import(path = sprintf("%s/optitype", path), sample = x)
#   })) %>%
#   unnest(data)
#
# miner <- tibble(sample = samples) %>%
#   mutate(data = map(sample, function(x) {
#     hlaminer_import(path = sprintf("%s/hla_miner", path), sample = x)
#   })) %>%
#   unnest(data)
bind_rows(arcas, invitro) %>%
drop_na()
})
}
x <- combine_HLA_import(path = isb_path, samples = isb_samples)
### Combined import function
combine_HLA_import <- function(path, samples){
suppressMessages({
invitro <- invitro_import()
arcas <- arcas_import(path = sprintf("%s/arcasHLA", path))
#
# phlat <- tibble(sample = samples) %>%
#   mutate(data = map(sample, function(x) {
#     phlat_import(path = sprintf("%s/phlat", path), sample = x)
#   })) %>%
#   unnest(data)
#
# opti <- tibble(sample = samples) %>%
#   mutate(data = map(sample, function(x) {
#     optitype_import(path = sprintf("%s/optitype", path), sample = x)
#   })) %>%
#   unnest(data)
#
# miner <- tibble(sample = samples) %>%
#   mutate(data = map(sample, function(x) {
#     hlaminer_import(path = sprintf("%s/hla_miner", path), sample = x)
#   })) %>%
#   unnest(data)
bind_rows(arcas) %>%
drop_na()
})
}
x <- combine_HLA_import(path = isb_path, samples = isb_samples)
View(x)
invitro
invitro_import <- function(path = "/local-scratch/datasets/ISBOtherCovid/hla-haplotyping/scisco-genetics/data/hla_2020-10-23_1457.tsv"){
read_tsv(path) %>%
select(`Sample ID`, `Allele 1`, `Allele 2`)
# %>%
#   pivot_longer(cols = !`Sample ID`, names_to = "allele_id", values_to = "allele" ) %>%
#   filter(!grepl("Not_Present", allele)) %>%
#   separate(allele, into = c("locus", "fields"), sep = "\\*", fill = "right") %>%
#   separate(fields, into = c("field_1", "field_2", "field_3"), sep = ":", fill = "right", extra = "drop") %>%
#   rename("sample" = "Sample ID") %>%
#   mutate(allele_id = str_sub(allele_id, -1),
#          genotyper = "invitro")
}
invitro_import()
### Import ISB molecular genotyping
invitro_import <- function(path = "/local-scratch/datasets/ISBOtherCovid/hla-haplotyping/scisco-genetics/data/hla_2020-10-23_1457.tsv"){
read_tsv(path) %>%
select(`Sample ID`, `Allele 1`, `Allele 2`) %>%
pivot_longer(cols = !`Sample ID`, names_to = "allele_id", values_to = "allele" )
# %>%
#   filter(!grepl("Not_Present", allele)) %>%
#   separate(allele, into = c("locus", "fields"), sep = "\\*", fill = "right") %>%
#   separate(fields, into = c("field_1", "field_2", "field_3"), sep = ":", fill = "right", extra = "drop") %>%
#   rename("sample" = "Sample ID") %>%
#   mutate(allele_id = str_sub(allele_id, -1),
#          genotyper = "invitro")
}
invitro_import()
View(x)
### Import ISB molecular genotyping
invitro_import <- function(path = "/local-scratch/datasets/ISBOtherCovid/hla-haplotyping/scisco-genetics/data/hla_2020-10-23_1457.tsv"){
read_tsv(path) %>%
select(`Sample ID`, `Allele 1`, `Allele 2`) %>%
pivot_longer(cols = !`Sample ID`, names_to = "allele_id", values_to = "allele") %>%
mutate(allele_id = str_extract("[12]$", allele_id))
# %>%
#   filter(!grepl("Not_Present", allele)) %>%
#   separate(allele, into = c("locus", "fields"), sep = "\\*", fill = "right") %>%
#   separate(fields, into = c("field_1", "field_2", "field_3"), sep = ":", fill = "right", extra = "drop") %>%
#   rename("sample" = "Sample ID") %>%
#   mutate(allele_id = str_sub(allele_id, -1),
#          genotyper = "invitro")
}
invitro_import()
### Import ISB molecular genotyping
invitro_import <- function(path = "/local-scratch/datasets/ISBOtherCovid/hla-haplotyping/scisco-genetics/data/hla_2020-10-23_1457.tsv"){
read_tsv(path) %>%
select(`Sample ID`, `Allele 1`, `Allele 2`) %>%
pivot_longer(cols = !`Sample ID`, names_to = "allele_id", values_to = "allele") %>%
mutate(allele_id = str_extract("[1-2]$", allele_id))
# %>%
#   filter(!grepl("Not_Present", allele)) %>%
#   separate(allele, into = c("locus", "fields"), sep = "\\*", fill = "right") %>%
#   separate(fields, into = c("field_1", "field_2", "field_3"), sep = ":", fill = "right", extra = "drop") %>%
#   rename("sample" = "Sample ID") %>%
#   mutate(allele_id = str_sub(allele_id, -1),
#          genotyper = "invitro")
}
invitro_import()
### Import ISB molecular genotyping
invitro_import <- function(path = "/local-scratch/datasets/ISBOtherCovid/hla-haplotyping/scisco-genetics/data/hla_2020-10-23_1457.tsv"){
read_tsv(path) %>%
select(`Sample ID`, `Allele 1`, `Allele 2`) %>%
pivot_longer(cols = !`Sample ID`, names_to = "allele_id", values_to = "allele")
# %>%
# mutate(allele_id = str_extract("[1-2]$", allele_id))
# %>%
#   filter(!grepl("Not_Present", allele)) %>%
#   separate(allele, into = c("locus", "fields"), sep = "\\*", fill = "right") %>%
#   separate(fields, into = c("field_1", "field_2", "field_3"), sep = ":", fill = "right", extra = "drop") %>%
#   rename("sample" = "Sample ID") %>%
#   mutate(allele_id = str_sub(allele_id, -1),
#          genotyper = "invitro")
}
invitro_import()
read_tsv(path) %>%
select(`Sample ID`, `Allele 1`, `Allele 2`) %>%
pivot_longer(cols = !`Sample ID`, names_to = "allele_id", values_to = "allele") %>%
mutate(allele_id = str_extract("[1-2]", allele_id))
### Import ISB molecular genotyping
invitro_import <- function(path = "/local-scratch/datasets/ISBOtherCovid/hla-haplotyping/scisco-genetics/data/hla_2020-10-23_1457.tsv"){
read_tsv(path) %>%
select(`Sample ID`, `Allele 1`, `Allele 2`) %>%
pivot_longer(cols = !`Sample ID`, names_to = "allele_id", values_to = "allele") %>%
mutate(allele_id = str_extract("[1-2]", allele_id))
# %>%
#   filter(!grepl("Not_Present", allele)) %>%
#   separate(allele, into = c("locus", "fields"), sep = "\\*", fill = "right") %>%
#   separate(fields, into = c("field_1", "field_2", "field_3"), sep = ":", fill = "right", extra = "drop") %>%
#   rename("sample" = "Sample ID") %>%
#   mutate(allele_id = str_sub(allele_id, -1),
#          genotyper = "invitro")
}
invitro_import()
?str_extract
### Import ISB molecular genotyping
invitro_import <- function(path = "/local-scratch/datasets/ISBOtherCovid/hla-haplotyping/scisco-genetics/data/hla_2020-10-23_1457.tsv"){
read_tsv(path) %>%
select(`Sample ID`, `Allele 1`, `Allele 2`) %>%
pivot_longer(cols = !`Sample ID`, names_to = "allele_id", values_to = "allele") %>%
mutate(allele_id = str_extract(allele_id, "[1-2]"))
# %>%
#   filter(!grepl("Not_Present", allele)) %>%
#   separate(allele, into = c("locus", "fields"), sep = "\\*", fill = "right") %>%
#   separate(fields, into = c("field_1", "field_2", "field_3"), sep = ":", fill = "right", extra = "drop") %>%
#   rename("sample" = "Sample ID") %>%
#   mutate(allele_id = str_sub(allele_id, -1),
#          genotyper = "invitro")
}
invitro_import()
### Import ISB molecular genotyping
invitro_import <- function(path = "/local-scratch/datasets/ISBOtherCovid/hla-haplotyping/scisco-genetics/data/hla_2020-10-23_1457.tsv"){
read_tsv(path) %>%
select(`Sample ID`, `Allele 1`, `Allele 2`) %>%
pivot_longer(cols = !`Sample ID`, names_to = "allele_id", values_to = "allele") %>%
mutate(allele_id = str_extract(allele_id, "[1-2]"),
genotyper = "invitro")
}
invitro_import()
source('/labs/khatrilab/solomonb/hla_project/hla_benchmark/data_import_functions.R', echo=TRUE)
invitro_import()
### Import ISB molecular genotyping
invitro_import <- function(path = "/local-scratch/datasets/ISBOtherCovid/hla-haplotyping/scisco-genetics/data/hla_2020-10-23_1457.tsv"){
read_tsv(path) %>%
select(`Sample ID`, `Allele 1`, `Allele 2`) %>%
pivot_longer(cols = !`Sample ID`, names_to = "allele_id", values_to = "allele") %>%
filter(!grepl("Not_Present", allele)) %>%
mutate(allele_id = str_extract(allele_id, "[1-2]"),
genotyper = "invitro") %>%
rename("sample" = "Sample ID")
}
invitro_import()
source('/labs/khatrilab/solomonb/hla_project/hla_benchmark/data_import_functions.R', echo=TRUE)
View(x)
install.packages("xfun")
install.packages("xfun")
library(tidyverse)
source("data_import_functions.R")
format_hla_table <- function(hla_table){
hla_table %>%
separate(allele, into = c("locus", "fields"), sep = "\\*") %>%
separate(fields, into = c("field_1", "field_2", "field_3"), sep = ":", fill = "right")
}
all_hla <- format_hla_table(combine_HLA_import(path = isb_path, samples = isb_samples))
# Format HLA table
format_hla_table <- function(hla_table){
hla_table %>%
separate(allele, into = c("locus", "fields"), sep = "\\*") %>%
separate(fields, into = c("field_1", "field_2", "field_3"), sep = ":",
fill = "right", extra = "drop")
}
all_hla <- format_hla_table(combine_HLA_import(path = isb_path, samples = isb_samples))
# Format HLA table
format_hla_table <- function(hla_table){
hla_table %>%
separate(allele, into = c("locus", "fields"), sep = "\\*",
fill = "right", extra = "drop") %>%
separate(fields, into = c("field_1", "field_2", "field_3"), sep = ":",
fill = "right", extra = "drop")
}
all_hla <- format_hla_table(combine_HLA_import(path = isb_path, samples = isb_samples))
View(all_hla)
View(all_hla)
all_hla %>%
mutate(field_2 = paste(field_1, field_2, sep = "_"), field_3 = paste(field_2, field_3, sep = "_"))
NA*1
NA*"hello"
all_hla
all_hla %>%
mutate(field_2 = paste(field_1, field_2, sep = "_"), field_3 = paste(field_2, field_3, sep = "_")) %>%
mutate_at(vars(field_1:fiel_3), function(x) ifelse(grepl("NA",x),NA,x))
all_hla %>%
mutate(field_2 = paste(field_1, field_2, sep = "_"), field_3 = paste(field_2, field_3, sep = "_")) %>%
mutate_at(vars(field_1:field_3), function(x) ifelse(grepl("NA",x),NA,x))
all_hla <- format_hla_table(combine_HLA_import(path = isb_path, samples = isb_samples))
all_hla %>%
pivot_longer(cols = field_1:field_3, names_to = "field", values_to = "allele")
all_hla %>%
pivot_longer(cols = field_1:field_3, names_to = "field", values_to = "allele") %>%
pivot_wider(names_from = "genotyper", values_from = allele, values_fn = function(x) sum(!is.na(x)))
all_hla %>%
pivot_longer(cols = field_1:field_3, names_to = "field", values_to = "allele") %>%
pivot_wider(names_from = "genotyper", values_from = "allele", values_fn = function(x) sum(!is.na(x)))
all_hla %>%
pivot_longer(cols = field_1:field_3, names_to = "field", values_to = "allele") %>%
pivot_wider(names_from = "genotyper", values_from = "allele", values_fn = length)
